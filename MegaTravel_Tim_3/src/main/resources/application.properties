# Define a custom port instead of the default 8080
server.port=8443
server.port.http=8080

# Tell Spring Security (if used) to require requests over HTTPS
security.require-ssl=true

# The format used for the keystore 
server.ssl.key-store-type=PKCS12
# The path to the keystore containing the certificate
server.ssl.key-store=globalKeyStore.p12
# The password used to generate the certificate
server.ssl.key-store-password=certificatePass1
# The alias mapped to the certificate
server.ssl.key-alias=certificatePass1

#Spring DataSource
spring.datasource.url = jdbc:mysql://localhost:3306/demo?useSSL=false&createDatabaseIfNotExist=true&serverTimezone=UTC
spring.datasource.username = root

spring.datasource.password = rootpass
spring.datasource.platform = mysql
spring.datasource.initialization-mode = always
#korisno ako je konekcija dugo u idle stanju
spring.datasource.dbcp.test-while-idle = true
spring.datasource.dbcp.validation-query = SELECT 1
#JPA-Hibernate
spring.jpa.show-sql = true
#kreira tabele na osnovu anotacija @Entity i kada aplikacija zavrsi
#sa radom dropuje ih
spring.jpa.hibernate.ddl-auto = update
#optimizacija za mysql upite
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL8Dialect

#